{"version":3,"sources":["components/RecipeContent.js","App.js","serviceWorker.js","index.js"],"names":["RecipeContent","strCategory","strMeal","strInstructions","strMealThumb","strYoutube","strIngredient1","strIngredient2","strIngredient3","strIngredient4","strIngredient5","strIngredient6","strIngredient7","strIngredient8","strIngredient9","strIngredient10","strIngredient11","strIngredient12","strIngredient13","strIngredient14","strIngredient15","strIngredient16","strIngredient17","strIngredient18","strIngredient19","strIngredient20","strMeasure1","strMeasure2","strMeasure3","strMeasure4","strMeasure5","strMeasure6","strMeasure7","strMeasure8","strMeasure9","strMeasure10","strMeasure11","strMeasure12","strMeasure13","strMeasure14","strMeasure15","strMeasure16","strMeasure17","strMeasure18","strMeasure19","strMeasure20","useState","showPopup","setShowPopup","handleClose","className","onClick","style","outline","src","alt","Modal","show","onHide","Header","closeButton","backgroundColor","Title","Body","width","borderRadius","paddingBottom","fontWeight","whiteSpace","textAlign","items","arr","forEach","e","ingredient","push","join","ingredientList","measure","filter","measureList","url","controls","Footer","Button","variant","FEATURED_API","App","searchTerm","setSearchTerm","recipe","setRecipe","getRecipe","API","fetch","then","res","json","data","meals","console","log","useEffect","onSubmit","preventDefault","type","placeholder","value","onChange","target","length","map","key","idMeal","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ffde3b76.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport \"./styles/RecipeContent.css\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  CollapsibleComponent,\r\n  CollapsibleHead,\r\n  CollapsibleContent,\r\n} from \"react-collapsible-component\";\r\nimport ReactPlayer from \"react-player/youtube\";\r\n\r\nconst IMAGES_API = \"/preview\";\r\n\r\nconst RecipeContent = ({\r\n  strCategory,\r\n  strMeal,\r\n  strInstructions,\r\n  strMealThumb,\r\n  strYoutube,\r\n  strIngredient1,\r\n  strIngredient2,\r\n  strIngredient3,\r\n  strIngredient4,\r\n  strIngredient5,\r\n  strIngredient6,\r\n  strIngredient7,\r\n  strIngredient8,\r\n  strIngredient9,\r\n  strIngredient10,\r\n  strIngredient11,\r\n  strIngredient12,\r\n  strIngredient13,\r\n  strIngredient14,\r\n  strIngredient15,\r\n  strIngredient16,\r\n  strIngredient17,\r\n  strIngredient18,\r\n  strIngredient19,\r\n  strIngredient20,\r\n  strMeasure1,\r\n  strMeasure2,\r\n  strMeasure3,\r\n  strMeasure4,\r\n  strMeasure5,\r\n  strMeasure6,\r\n  strMeasure7,\r\n  strMeasure8,\r\n  strMeasure9,\r\n  strMeasure10,\r\n  strMeasure11,\r\n  strMeasure12,\r\n  strMeasure13,\r\n  strMeasure14,\r\n  strMeasure15,\r\n  strMeasure16,\r\n  strMeasure17,\r\n  strMeasure18,\r\n  strMeasure19,\r\n  strMeasure20,\r\n}) => {\r\n  const [showPopup, setShowPopup] = useState(false);\r\n\r\n  const handleClose = () => setShowPopup(false);\r\n  const handleShow = () => setShowPopup(true);\r\n\r\n  function ingredientsCheck() {\r\n    const ingredients = [\r\n      { ingredient: strIngredient1 },\r\n      { ingredient: strIngredient2 },\r\n      { ingredient: strIngredient3 },\r\n      { ingredient: strIngredient4 },\r\n      { ingredient: strIngredient5 },\r\n      { ingredient: strIngredient6 },\r\n      { ingredient: strIngredient7 },\r\n      { ingredient: strIngredient8 },\r\n      { ingredient: strIngredient9 },\r\n      { ingredient: strIngredient10 },\r\n      { ingredient: strIngredient11 },\r\n      { ingredient: strIngredient12 },\r\n      { ingredient: strIngredient13 },\r\n      { ingredient: strIngredient14 },\r\n      { ingredient: strIngredient15 },\r\n      { ingredient: strIngredient16 },\r\n      { ingredient: strIngredient17 },\r\n      { ingredient: strIngredient18 },\r\n      { ingredient: strIngredient19 },\r\n      { ingredient: strIngredient20 },\r\n    ];\r\n    return ingredientList(ingredients);\r\n  }\r\n\r\n  function ingredientList(items) {\r\n    const arr = [];\r\n    items.forEach((e) => {\r\n      if (!e.ingredient == \"\") {\r\n        arr.push(e.ingredient);\r\n      }\r\n    });\r\n    return arr.join(\"\\n\");\r\n  }\r\n\r\n  function measuresCheck() {\r\n    const measures = [\r\n      { measure: strMeasure1 },\r\n      { measure: strMeasure2 },\r\n      { measure: strMeasure3 },\r\n      { measure: strMeasure4 },\r\n      { measure: strMeasure5 },\r\n      { measure: strMeasure6 },\r\n      { measure: strMeasure7 },\r\n      { measure: strMeasure8 },\r\n      { measure: strMeasure9 },\r\n      { measure: strMeasure10 },\r\n      { measure: strMeasure11 },\r\n      { measure: strMeasure12 },\r\n      { measure: strMeasure13 },\r\n      { measure: strMeasure14 },\r\n      { measure: strMeasure15 },\r\n      { measure: strMeasure16 },\r\n      { measure: strMeasure17 },\r\n      { measure: strMeasure18 },\r\n      { measure: strMeasure19 },\r\n      { measure: strMeasure20 },\r\n    ];\r\n    return measureList(measures);\r\n  }\r\n\r\n  function measureList(items) {\r\n    const arr = [];\r\n    items.forEach((e) => {\r\n      if (!e.measure == \"\") {\r\n        arr.push(e.measure);\r\n      }\r\n    });\r\n    arr.filter(function (e) {\r\n      return e != null;\r\n    });\r\n    return arr.join(\"\\n\");\r\n  }\r\n  /* eslint eqeqeq: 0 */\r\n  return (\r\n    <div className=\"recipe__content\">\r\n      <button\r\n        className=\"recipe__button\"\r\n        onClick={handleShow}\r\n        style={{ outline: \"none\" }}\r\n      >\r\n        <img src={strMealThumb + IMAGES_API} alt={strMeal} />\r\n      </button>\r\n\r\n      <div className=\"recipe__info\">\r\n        <h3>{strMeal}</h3>\r\n      </div>\r\n\r\n      <Modal show={showPopup} onHide={handleClose}>\r\n        <Modal.Header closeButton style={{ backgroundColor: \"#bdb2ff\" }}>\r\n          <Modal.Title>\r\n            {strMeal} - {strCategory}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body style={{ backgroundColor: \"#d6d3f0\" }}>\r\n          <img\r\n            src={strMealThumb}\r\n            alt=\"\"\r\n            style={{\r\n              width: \"100%\",\r\n              borderRadius: \"5px\",\r\n              paddingBottom: \"15px\",\r\n            }}\r\n          />\r\n          <CollapsibleComponent>\r\n            <CollapsibleHead>Ingredients</CollapsibleHead>\r\n            <CollapsibleContent>\r\n              <div className=\"recipe__ingredients\">\r\n                <p\r\n                  style={{\r\n                    fontWeight: \"500\",\r\n                    whiteSpace: \"pre\",\r\n                    textAlign: \"center\",\r\n                  }}\r\n                >\r\n                  {ingredientsCheck()}\r\n                </p>\r\n                <p>{measuresCheck()}</p>\r\n              </div>\r\n            </CollapsibleContent>\r\n\r\n            <CollapsibleHead>Instructions</CollapsibleHead>\r\n            <CollapsibleContent>\r\n              <p style={{ fontWeight: \"500\", whiteSpace: \"pre-line\" }}>\r\n                {strInstructions}\r\n              </p>\r\n            </CollapsibleContent>\r\n            <CollapsibleHead>Youtube</CollapsibleHead>\r\n            <CollapsibleContent>\r\n              <div>\r\n                <ReactPlayer url={strYoutube} controls={true} width=\"auto\" />\r\n              </div>\r\n            </CollapsibleContent>\r\n          </CollapsibleComponent>\r\n        </Modal.Body>\r\n        <Modal.Footer style={{ backgroundColor: \"#bdb2ff\" }}>\r\n          <Button variant=\"primary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecipeContent;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport RecipeContent from \"./components/RecipeContent\";\n\nconst FEATURED_API = \"https://www.themealdb.com/api/json/v1/1/random.php\";\n\nconst SEARCH_API = \"https://www.themealdb.com/api/json/v1/1/search.php?s=\";\nfunction App() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [recipe, setRecipe] = useState([]);\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n\n    if (searchTerm) {\n      getRecipe(SEARCH_API + searchTerm);\n    } else {\n      getRecipe(FEATURED_API);\n    }\n    setSearchTerm(\"\");\n  };\n\n  const getRecipe = (API) => {\n    fetch(API)\n      .then((res) => res.json())\n      .then((data) => {\n        setRecipe(data.meals);\n        console.log(data.meals);\n      });\n  };\n\n  useEffect(() => {\n    getRecipe(FEATURED_API);\n  }, []);\n\n  const handleOnChange = (e) => {\n    setSearchTerm(e.target.value);\n  };\n\n  return (\n    <>\n      <div className=\"header\">\n        <h1 className=\"header__h1\">Recipe App</h1>\n        <form onSubmit={handleOnSubmit}>\n          <input\n            type=\"search\"\n            className=\"header__search\"\n            placeholder=\"Search...\"\n            value={searchTerm}\n            onChange={handleOnChange}\n          />\n        </form>\n      </div>\n      <div className=\"recipe\">\n        {recipe?.length > 0 &&\n          recipe?.map((recipe) => (\n            <RecipeContent key={recipe.idMeal} {...recipe} />\n          ))}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <App />,\n\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}